// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SimpleWebApi.Infrastructure.Database;

#nullable disable

namespace SimpleWebApi.Infrastructure.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221020130538_InitialMigrate")]
    partial class InitialMigrate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SimpleWebApi.Domain.Country", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("country_id");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country_name");

                    b.HasKey("CountryId")
                        .HasName("pk_countries");

                    b.HasIndex("CountryName")
                        .IsUnique()
                        .HasDatabaseName("ix_countries_country_name");

                    b.ToTable("countries", (string)null);

                    b.HasData(
                        new
                        {
                            CountryId = new Guid("7f148b1e-f671-4017-904c-b24542922ae6"),
                            CountryName = "Country 1"
                        },
                        new
                        {
                            CountryId = new Guid("75b2129e-3b9a-4713-81f3-c7105e7939ae"),
                            CountryName = "Country 2"
                        },
                        new
                        {
                            CountryId = new Guid("038d1341-2d32-455c-afd3-66e7f36fdf6f"),
                            CountryName = "Country 3"
                        });
                });

            modelBuilder.Entity("SimpleWebApi.Domain.Province", b =>
                {
                    b.Property<Guid>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("province_id");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid")
                        .HasColumnName("country_id");

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("province_name");

                    b.HasKey("ProvinceId")
                        .HasName("pk_provinces");

                    b.HasIndex("CountryId", "ProvinceName")
                        .IsUnique()
                        .HasDatabaseName("ix_provinces_country_id_province_name");

                    b.ToTable("provinces", (string)null);

                    b.HasData(
                        new
                        {
                            ProvinceId = new Guid("3a09746a-9123-4f64-b0c0-92337aa65d21"),
                            CountryId = new Guid("7f148b1e-f671-4017-904c-b24542922ae6"),
                            ProvinceName = "Country 1 Province 1"
                        },
                        new
                        {
                            ProvinceId = new Guid("171d3f32-307d-407d-babb-d40dcc373158"),
                            CountryId = new Guid("7f148b1e-f671-4017-904c-b24542922ae6"),
                            ProvinceName = "Country 1 Province 2"
                        },
                        new
                        {
                            ProvinceId = new Guid("60ecb98e-8890-4df0-8932-d3749b732ac3"),
                            CountryId = new Guid("7f148b1e-f671-4017-904c-b24542922ae6"),
                            ProvinceName = "Country 1 Province 3"
                        },
                        new
                        {
                            ProvinceId = new Guid("2254cb1d-3f92-429c-9fa4-a57e4c791a9d"),
                            CountryId = new Guid("75b2129e-3b9a-4713-81f3-c7105e7939ae"),
                            ProvinceName = "Country 2 Province 1"
                        },
                        new
                        {
                            ProvinceId = new Guid("1de6b7be-ea8b-41af-b393-77e9b980ff97"),
                            CountryId = new Guid("75b2129e-3b9a-4713-81f3-c7105e7939ae"),
                            ProvinceName = "Country 2 Province 2"
                        },
                        new
                        {
                            ProvinceId = new Guid("2b1334c5-46dd-4319-ab93-32b8f6d1cd7f"),
                            CountryId = new Guid("75b2129e-3b9a-4713-81f3-c7105e7939ae"),
                            ProvinceName = "Country 2 Province 3"
                        },
                        new
                        {
                            ProvinceId = new Guid("c1361566-bc5f-499c-85be-2162ab6b5450"),
                            CountryId = new Guid("038d1341-2d32-455c-afd3-66e7f36fdf6f"),
                            ProvinceName = "Country 3 Province 1"
                        },
                        new
                        {
                            ProvinceId = new Guid("c55f08d2-7b3d-44b4-8bb4-bc098d6445ea"),
                            CountryId = new Guid("038d1341-2d32-455c-afd3-66e7f36fdf6f"),
                            ProvinceName = "Country 3 Province 2"
                        },
                        new
                        {
                            ProvinceId = new Guid("47c7c268-8ef6-4141-afbf-b1fabd2c94b2"),
                            CountryId = new Guid("038d1341-2d32-455c-afd3-66e7f36fdf6f"),
                            ProvinceName = "Country 3 Province 3"
                        });
                });

            modelBuilder.Entity("SimpleWebApi.Domain.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("password_salt");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uuid")
                        .HasColumnName("province_id");

                    b.HasKey("UserId")
                        .HasName("pk_users");

                    b.HasIndex("Login")
                        .IsUnique()
                        .HasDatabaseName("ix_users_login");

                    b.HasIndex("ProvinceId")
                        .HasDatabaseName("ix_users_province_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("SimpleWebApi.Domain.Province", b =>
                {
                    b.HasOne("SimpleWebApi.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_provinces_countries_country_id");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SimpleWebApi.Domain.User", b =>
                {
                    b.HasOne("SimpleWebApi.Domain.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_users_provinces_province_id");

                    b.Navigation("Province");
                });
#pragma warning restore 612, 618
        }
    }
}
